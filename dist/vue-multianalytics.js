(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["VueMultianalytics"] = factory();
	else
		root["VueMultianalytics"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/AnalyticsPlugin.js":
/*!********************************!*\
  !*** ./src/AnalyticsPlugin.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AnalyticsPlugin; });\n/**\n * Plugin main class\n */\nclass AnalyticsPlugin {\n                 constructor(modulesEnabled) {\n                   this.modulesEnabled = modulesEnabled;\n                 }\n\n                 /**\n                  * Dispatch a view analytics event\n                  *\n                  * params object should contain\n                  * @param viewName\n                  */\n                 trackView(params = {}, excludedModules = []) {\n                   if (!params.viewName) {\n                     return;\n                   }\n\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.trackView(params);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Dispatch a tracking analytics event\n                  *\n                  * params object should contain\n                  * @param category\n                  * @param action\n                  * @param label\n                  * @param value\n                  */\n                 trackEvent(params = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.trackEvent(params);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Dispatch a tracking analytics event\n                  *\n                  * params object should contain\n                  * @param product\n                  * @param productActionType\n                  * @param attributes\n                  */\n                 ecommerceTrackEvent(params = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.ecommerceTrackEvent(params);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Track an exception that occurred in the application.\n                  *\n                  * The params object should contain\n                  * @param {string} description - Something describing the error (max. 150 Bytes)\n                  * @param {boolean} isFatal - Specifies whether the exception was fatal\n                  */\n                 trackException(params = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.trackException(params);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Track an user timing to measure periods of time.\n                  *\n                  *  The params object should contain\n                  * @param {string} timingCategory - A string for categorizing all user timing variables into logical groups (e.g. 'JS Dependencies').\n                  * @param {string} timingVar -  A string to identify the variable being recorded (e.g. 'load').\n                  * @param {number} timingValue - The number of milliseconds in elapsed time to report to Google Analytics (e.g. 20).\n                  * @param {string|null} timingLabel -  A string that can be used to add flexibility in visualizing user timings in the reports (e.g. 'Google CDN').\n                  */\n                 trackTiming(params = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.trackTiming(params);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Ecommerce transactions.\n                  * @param {long} id - Transaction ID. Required\n                  * @param {string} affiliation -  Affiliation or store name\n                  * @param {float} revenue - Grand Total\n                  * @param {flat} shipping -  Shipping\n                  * @param {float} tax - Tax\n                  * @param {string} currency - Currency - https://developers.google.com/analytics/devguides/platform/features/currencies\n                  */\n                 addTransaction(params = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.addTransaction(params);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Ecommerce transactions.\n                  * @param {long} id - Transaction ID. Required\n                  * @param {string} name -  Product name. Required.\n                  * @param {string} sku - SKU/code.\n                  * @param {string} category -  Category or variation.\n                  * @param {float} price - Unit price.\n                  * @param {int} quantity - Quantity\n                  */\n                 addItem(params = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.addItem(params);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Ecommerce track a transaction.\n                  */\n                 trackTransaction(excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.trackTransaction();\n                     }\n                   });\n                 }\n\n                 /**\n                  * Ecommerce clear a transaction.\n                  */\n                 clearTransactions(excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.clearTransactions();\n                     }\n                   });\n                 }\n\n                 /**\n                  * Set the username.\n                  *\n                  * @param {string} name - The username\n                  */\n                 setUsername(name, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.setUsername(name);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Set some user properties.\n                  *\n                  * @param {any} properties - The user properties\n                  */\n                 async setUserProperties (properties = {}, excludedModules = []) {\n                   const modulesToExecute = this.modulesEnabled.filter(moduleToCheck => excludedModules.indexOf(moduleToCheck.name) === -1);\n                   const response = await Promise.all(modulesToExecute.map(\n                       module => {\n                         return module.setUserProperties(properties)\n                       }\n                     ));\n                   return response;\n                 }\n\n                 /**\n                  * Set some user properties once.\n                  *\n                  * @param {any} properties - The user properties once\n                  */\n                 async setUserPropertiesOnce(properties = {}, excludedModules = []) {\n                   const modulesToExecute = this.modulesEnabled.filter(moduleToCheck => excludedModules.indexOf(moduleToCheck.name) === -1);\n                   const response = await Promise.all(modulesToExecute.map(\n                       module => {\n                         return module.setUserPropertiesOnce(\n                           properties\n                         );\n                       }\n                     ));\n                   return response;\n                 }\n\n                 /**\n                  * Set some user properties once.\n                  *\n                  * @param {any} properties - The some properties that will be sent in all the events if supported\n                  */\n                 setSuperProperties(properties = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.setSuperProperties(properties);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Set some user properties.\n                  *\n                  * @param {any} properties - The some properties that will be sent in the next event\n                  */\n                 setSuperPropertiesOnce(properties = {}, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.setSuperPropertiesOnce(properties);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Identify the user\n                  *\n                  * @param {string} userId - The unique ID of the user\n                  * @param {object} options - Options to add\n                  */\n                 async identify(params = {}, excludedModules = []) {\n                   const modulesToExecute = this.modulesEnabled.filter(moduleToCheck => excludedModules.indexOf(moduleToCheck.name) === -1);\n                   const response = await Promise.all(modulesToExecute.map(\n                       module => {\n                         return module.identify(params);\n                       }\n                     ));\n                   return response;\n                 }\n\n                 /**\n                  * Set an alias for the current instance\n                  *\n                  * @param {string} alias - The alias to be set\n                  */\n                 setAlias(alias, excludedModules = []) {\n                   this.modulesEnabled.forEach(module => {\n                     if (excludedModules.indexOf(module.name) === -1) {\n                       module.setAlias(alias);\n                     }\n                   });\n                 }\n\n                 /**\n                  * Resets the id & clears cache\n                  *\n                  */\n                 async reset(excludedModules = []) {\n                   const modulesToExecute = this.modulesEnabled.filter(moduleToCheck => excludedModules.indexOf(moduleToCheck.name) === -1);\n                   const response = await Promise.all(modulesToExecute.map(\n                       module => {\n                         return module.reset();\n                       }\n                     ));\n                   return response;\n                 }\n               }\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/AnalyticsPlugin.js?");

/***/ }),

/***/ "./src/analyticsTypes.js":
/*!*******************************!*\
  !*** ./src/analyticsTypes.js ***!
  \*******************************/
/*! exports provided: MODULE_GA, MODULE_MIXPANEL, MODULE_SEGMENT, MODULE_FACEBOOK, MODULE_MPARTICLE, MODULE_MATOMO */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULE_GA\", function() { return MODULE_GA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULE_MIXPANEL\", function() { return MODULE_MIXPANEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULE_SEGMENT\", function() { return MODULE_SEGMENT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULE_FACEBOOK\", function() { return MODULE_FACEBOOK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULE_MPARTICLE\", function() { return MODULE_MPARTICLE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULE_MATOMO\", function() { return MODULE_MATOMO; });\nconst MODULE_GA = 'ga'\nconst MODULE_MIXPANEL = 'mixpanel'\nconst MODULE_SEGMENT = 'segment'\nconst MODULE_FACEBOOK = 'facebook'\nconst MODULE_MPARTICLE = 'mparticle'\nconst MODULE_MATOMO = 'matomo'\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/analyticsTypes.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _AnalyticsPlugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AnalyticsPlugin */ \"./src/AnalyticsPlugin.js\");\n/* harmony import */ var _modules_BasicModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/BasicModule */ \"./src/modules/BasicModule.js\");\n/* harmony import */ var _modules_GAModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/GAModule */ \"./src/modules/GAModule.js\");\n/* harmony import */ var _modules_MixpanelModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/MixpanelModule */ \"./src/modules/MixpanelModule.js\");\n/* harmony import */ var _modules_SegmentModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/SegmentModule */ \"./src/modules/SegmentModule.js\");\n/* harmony import */ var _modules_FacebookModule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/FacebookModule */ \"./src/modules/FacebookModule.js\");\n/* harmony import */ var _modules_MparticleModule__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/MparticleModule */ \"./src/modules/MparticleModule.js\");\n/* harmony import */ var _modules_MatomoModule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/MatomoModule */ \"./src/modules/MatomoModule.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _analyticsTypes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./analyticsTypes */ \"./src/analyticsTypes.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst customModules = {}\n\n/**\n * Installation procedure\n *\n * @param Vue\n * @param initConf\n */\n\n\nconst install = function (Vue, initConf = {}, mixin) {\n  // init Google Analytics\n  // We create all the modules that app will use\n  Vue.modulesEnabled = []\n  for (let key in initConf.modules) {\n    let module\n    switch (key) {\n      case _analyticsTypes__WEBPACK_IMPORTED_MODULE_9__[\"MODULE_GA\"]:\n        module = new _modules_GAModule__WEBPACK_IMPORTED_MODULE_2__[\"default\"]()\n        module.init(initConf.modules[key])\n        break;\n      case _analyticsTypes__WEBPACK_IMPORTED_MODULE_9__[\"MODULE_MIXPANEL\"]:\n        module = new _modules_MixpanelModule__WEBPACK_IMPORTED_MODULE_3__[\"default\"]()\n        module.init(initConf.modules[key])\n        break;\n      case _analyticsTypes__WEBPACK_IMPORTED_MODULE_9__[\"MODULE_SEGMENT\"]:\n        module = new _modules_SegmentModule__WEBPACK_IMPORTED_MODULE_4__[\"default\"]()\n        module.init(initConf.modules[key])\n        break;\n      case _analyticsTypes__WEBPACK_IMPORTED_MODULE_9__[\"MODULE_FACEBOOK\"]:\n        module = new _modules_FacebookModule__WEBPACK_IMPORTED_MODULE_5__[\"default\"]()\n        module.init(initConf.modules[key])\n        break;\n      case _analyticsTypes__WEBPACK_IMPORTED_MODULE_9__[\"MODULE_MPARTICLE\"]:\n        module = new _modules_MparticleModule__WEBPACK_IMPORTED_MODULE_6__[\"default\"]()\n        module.init(initConf.modules[key])\n      case _analyticsTypes__WEBPACK_IMPORTED_MODULE_9__[\"MODULE_MATOMO\"]:\n        module = new _modules_MatomoModule__WEBPACK_IMPORTED_MODULE_7__[\"default\"]()\n        module.init(initConf.modules[key])\n      default:\n        break;\n    }\n    if (module) {\n      Vue.modulesEnabled.push(module)\n    }\n  }\n\n  if (Object.keys(customModules).length > 0) {\n    Object.values(customModules).forEach((module, index) => {\n      let moduleInstance = new module()\n      moduleInstance.init(initConf.modules[Object.keys(customModules)[index]])\n      Vue.modulesEnabled.push(moduleInstance)\n    })\n  }\n  // Handle vue-router if defined\n  if (initConf.routing && initConf.routing.vueRouter) {\n    initVueRouterGuard(Vue, initConf.routing)\n  }\n\n  // Add to vue prototype and also from globals\n  const analyticsPlugin = new _AnalyticsPlugin__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Vue.modulesEnabled)\n  Vue.prototype.$multianalytics = Vue.prototype.$ma = Vue.ma = analyticsPlugin\n\n\n  // User can add its own implementation of an interface\n  if (mixin) {\n    Vue.prototype.$multianalyticsm =  Vue.prototype.$mam = Vue.mam =  mixin(analyticsPlugin)\n  }\n\n}\n\nconst addCustomModule = function (name, module) {\n  customModules[name] = module\n}\n\n/**\n * Init the router guard.\n *\n * @param {any} Vue - The Vue instance\n * @param {any} routing - an object with some properties to be used by the vueRouterGuard. Possible params are 'vueRouter', 'ignoredView', 'preferredProperty', 'ignoredModules'\n * @returns {string[]} The ignored routes names formalized.\n */\nconst initVueRouterGuard = function (Vue, routing) {\n  // Flatten routes name\n  if (routing.ignoredViews) {\n    routing.ignoredViews = routing.ignoredViews.map(view => view.toLowerCase())\n  }\n\n  if (!routing.preferredProperty) {\n    routing.preferredProperty = 'path'\n  }\n\n\n  routing.vueRouter.afterEach(to => {\n    // Ignore some routes\n    if (routing.ignoredViews && routing.ignoredViews.indexOf(to[routing.preferredProperty].toLowerCase()) !== -1) {\n      return\n    }\n    // Dispatch vue event using meta analytics value if defined otherwise fallback to route name\n    Vue.ma.trackView({viewName: to.meta.analytics || to[routing.preferredProperty]}, routing.ignoredModules)\n  })\n\n  return routing.ignoredViews;\n}\n\n// Export module\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ install, addCustomModule, BasicModule: _modules_BasicModule__WEBPACK_IMPORTED_MODULE_1__[\"default\"] });\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/index.js?");

/***/ }),

/***/ "./src/modules/BasicModule.js":
/*!************************************!*\
  !*** ./src/modules/BasicModule.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BasicModule; });\nclass BasicModule {\n\n  constructor(name, config = {}) {\n    this.name = name\n    this.config = config\n  }\n\n  trackView () { /* Overriden by modules */ }\n\n  trackEvent () { /* Overriden by modules */ }\n\n  trackException () { /* Overriden by modules */ }\n\n  trackTiming () { /* Overriden by modules */ }\n\n  setAlias () { /* Overriden by modules */ }\n\n  identify () { /* Overriden by modules */ }\n\n  setUsername () { /* Overriden by modules */ }\n\n  setUserProperties () { /* Overriden by modules */ }\n\n  setUserPropertiesOnce () { /* Overriden by modules */ }\n\n  incrementUserProperties () { /* Overriden by modules */ }\n\n  setSuperProperties () { /* Overriden by modules */ }\n\n  setSuperPropertiesOnce () { /* Overriden by modules */ }\n\n  ecommerceTrackEvent () { /* Overriden by modules */ }\n  \n  addTransaction () { /* Overriden by modules */}\n\n  addItem () { /* Overriden by modules */}\n\n  trackTransaction () { /* Overriden by modules */}\n\n  clearTransactions () { /* Overriden by modules */}\n\n  reset () { /* Overriden by modules */}\n\n}\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/modules/BasicModule.js?");

/***/ }),

/***/ "./src/modules/FacebookModule.js":
/*!***************************************!*\
  !*** ./src/modules/FacebookModule.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FacebookModule; });\n/* harmony import */ var _analyticsTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../analyticsTypes */ \"./src/analyticsTypes.js\");\n/* harmony import */ var _BasicModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BasicModule */ \"./src/modules/BasicModule.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\n\n\n\nclass FacebookModule extends _BasicModule__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n  constructor () {\n    super(_analyticsTypes__WEBPACK_IMPORTED_MODULE_0__[\"MODULE_FACEBOOK\"])\n  }\n\n  init (initConf = {}) {\n    (function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n      n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;\n      n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.setAttribute('defer','');\n      t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)})(window,\n      document,'script','https://connect.facebook.net/en_US/fbevents.js');\n\n      // Apply default configuration\n      // initConf = { ...pluginConfig, ...initConf }\n      const mandatoryParams = [ 'token' ];\n      mandatoryParams.forEach(el => {\n        if (!initConf[ el ]) throw new Error(`VueAnalytics : Please provide a \"${el}\" from the config.`)\n      })\n\n      this.config.debug = initConf.debug\n      fbq('init', initConf.token)\n  }\n\n\n  // Methods\n\n  /**\n   * Dispatch a view analytics event\n   * https://developers.facebook.com/docs/ads-for-websites/pixel-events/v2.8\n   *\n   * params object should contain\n   *\n   */\n  trackView ({}) {\n    fbq('track', 'PageView')\n  }\n\n  /**\n   * Dispatch a tracking analytics event\n   * https://developers.facebook.com/docs/ads-for-websites/pixel-events/v2.8\n   *\n   * params object should contain\n   * @param {string} fb_event - Name of the specific event, it will be ViewContent by default\n   * @param {string} category - Typically the object that was interacted with (e.g. 'Video')\n   * @param {string} action - The type of interaction (e.g. 'play')\n   * @param {string} label - Useful for categorizing events (e.g. 'Fall Campaign')\n   * @param {integer} value - A numeric value associated with the event (e.g. 42)\n   * @param {array} ids - Array of ids which are affected in event\n   * @param {string} type - What kind of contente we are reffered with this event\n   * @param {string} currency - Currency the event will use\n   */\n  trackEvent ({ fb_event = 'ViewContent', category = \"Event\", action, label = null, value = null, callback = null, ids = [], type = null, currency = null }) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments)\n    }\n    if (value) {\n      var parsed = parseInt(value, 10);\n      value = isNaN(parsed) ? 0 : parsed;\n    }\n\n    let fieldsObject = {\n      content_name: label,\n      content_category: category,\n      content_ids: ids,\n      content_type: type,\n      value: value,\n      currency: currency\n    }\n    fbq('track', fb_event, fieldsObject)\n  }\n}\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/modules/FacebookModule.js?");

/***/ }),

/***/ "./src/modules/GAModule.js":
/*!*********************************!*\
  !*** ./src/modules/GAModule.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GAModule; });\n/* harmony import */ var _analyticsTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../analyticsTypes */ \"./src/analyticsTypes.js\");\n/* harmony import */ var _BasicModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BasicModule */ \"./src/modules/BasicModule.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\n\n\n\nclass GAModule extends _BasicModule__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n  constructor () {\n    super(_analyticsTypes__WEBPACK_IMPORTED_MODULE_0__[\"MODULE_GA\"])\n    this.settings = {\n      additionalAccountNames: [],  // array of additional account names (only works for analyticsjs)\n      userId: null\n    }\n  }\n\n  init (initConf = {}) {\n\n      // Load the analytics snippet\n      (function (i, s, o, g, r, a, m) {\n        i[ 'GoogleAnalyticsObject' ] = r;\n        i[ r ] = i[ r ] || function () {\n            (i[ r ].q = i[ r ].q || []).push(arguments)\n          }, i[ r ].l = 1 * new Date();\n        a = s.createElement(o),\n          m = s.getElementsByTagName(o)[ 0 ];\n        // a.async = 1;\n        a.setAttribute('defer','');\n        a.src = g;\n        m.parentNode.insertBefore(a, m)\n      })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n\n\n      // Apply default configuration\n      // initConf = { ...pluginConfig, ...initConf }\n      const mandatoryParams = [ 'trackingId', 'appName', 'appVersion' ];\n      mandatoryParams.forEach(el => {\n        if (!initConf[ el ]) throw new Error(`VueAnalytics : Please provide a \"${el}\" from the config.`)\n      })\n\n      this.config.debug = initConf.debug\n\n      // register tracker\n      ga('create', initConf.trackingId, 'auto')\n      ga(\"set\", \"transport\", \"beacon\")\n\n      // set app name and version\n      ga('set', 'appName', initConf.appName)\n      ga('set', 'appVersion', initConf.appVersion)\n\n      // ecommerce\n      if (initConf['ecommerce']) {\n        ga('require', 'ecommerce')\n      }\n\n  }\n\n\n  // Methods\n\n  /**\n   * Dispatch a view analytics event\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/pages\n   *\n   * params object should contain\n   * @param {string} viewName - The name of the view\n   */\n  trackView ({viewName}) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(viewName)\n    }\n\n    let fieldsObject = {\n      hitType: 'pageview',\n      page: viewName\n    }\n\n    if (this.settings.userId) {\n      ga('set', '&uid', this.settings.userId)\n    }\n\n    // ga('set', 'screenName', params.viewName)\n    ga('send', fieldsObject)\n  }\n\n  /**\n   * Dispatch a tracking analytics event\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n   *\n   * params object should contain\n   * @param {string} category - Typically the object that was interacted with (e.g. 'Video')\n   * @param {string} action - The type of interaction (e.g. 'play')\n   * @param {string} label - Useful for categorizing events (e.g. 'Fall Campaign')\n   * @param {integer} value - A numeric value associated with the event (e.g. 42)\n   */\n  trackEvent ({category = \"Event\", action, label = null, value = null, callback = null }) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments)\n    }\n\n    // GA requires that eventValue be an integer, see:\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#eventValue\n    // https://github.com/luisfarzati/angulartics/issues/81\n    if (value) {\n      var parsed = parseInt(value, 10);\n      value = isNaN(parsed) ? 0 : parsed;\n    }\n\n    let fieldsObject = {\n      hitType: 'event',\n      eventCategory: category,\n      eventAction: action,\n      eventLabel: label,\n      eventValue: value,\n      hitCallback: callback,\n      userId: this.settings.userId\n    }\n\n    ga('send', fieldsObject)\n  }\n\n  /**\n   * Track an exception that occurred in the application.\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/exceptions\n   *\n   * @param {string} description - Something describing the error (max. 150 Bytes)\n   * @param {boolean} isFatal - Specifies whether the exception was fatal\n   */\n  trackException ({description = \"\", isFatal = false}) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])({description, isFatal})\n    }\n    ga('send', 'exception', { 'exDescription': description, 'exFatal': isFatal });\n  }\n\n  /**\n   * Track an user timing to measure periods of time.\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/user-timings\n   *\n   * @param {string} timingCategory - A string for categorizing all user timing variables into logical groups (e.g. 'JS Dependencies').\n   * @param {string} timingVar -  A string to identify the variable being recorded (e.g. 'load').\n   * @param {number} timingValue - The number of milliseconds in elapsed time to report to Google Analytics (e.g. 20).\n   * @param {string|null} timingLabel -  A string that can be used to add flexibility in visualizing user timings in the reports (e.g. 'Google CDN').\n   */\n  trackTiming (timingCategory, timingVar, timingValue, timingLabel = null) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])({timingCategory, timingVar, timingValue, timingLabel})\n    }\n    let conf = {\n      hitType: 'timing',\n      timingCategory,\n      timingVar,\n      timingValue\n    }\n    if (timingLabel) {\n      conf.timingLabel = timingLabel;\n    }\n\n    ga('send', conf);\n  }\n\n\n  setUsername (userId) {\n    this.settings.userId = userId\n  }\n\n  // Same as setUsername\n  identify ({userId}) {\n    this.setUsername(userId)\n  }\n\n  setUserProperties({properties}) {\n    // this.setDimensionsAndMetrics(properties)\n  }\n\n  /**\n  * Ecommerce transactions.\n  * ecommerce needs to be enabled in the module options (ecommerce = true)\n  * More info at https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce\n  * @param {long} id - Transaction ID. Required\n  * @param {string} affiliation -  Affiliation or store name\n  * @param {float} revenue - Grand Total\n  * @param {flat} shipping -  Shipping\n  * @param {float} tax - Tax\n  * @param {string} currency - Currency - https://developers.google.com/analytics/devguides/platform/features/currencies\n  */\n  addTransaction ({id, affiliation = '', revenue = 0, shipping = 0, tax = 0, currency = 'USD'}) {\n    ga('ecommerce:addTransaction', {\n      id,\n      affiliation,\n      revenue,\n      shipping,\n      tax,\n      currency\n    })\n  }\n\n  /**\n  * Ecommerce transactions.\n  * ecommerce needs to be enabled in the module options (ecommerce = true)\n  * More info at https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce\n  * @param {long} id - Transaction ID. Required\n  * @param {string} name -  Product name. Required.\n  * @param {string} sku - SKU/code.\n  * @param {string} category -  Category or variation.\n  * @param {float} price - Unit price.\n  * @param {int} quantity - Quantity\n  */\n  addItem ({id, name, sku, category, price = 0, quantity = 1}) {\n    ga('ecommerce:addItem', {\n      id,\n      name,\n      sku,\n      category,\n      price,\n      quantity\n    })\n  }\n\n  /**\n  * Ecommerce transactions.\n  * More info at https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce\n  */\n  trackTransaction () {\n    ga('ecommerce:send')\n  }\n\n  /**\n  * Ecommerce transactions.\n  * More info at https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce\n  */\n  clearTransactions () {\n    ga('ecommerce:clear')\n  }\n\n}\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/modules/GAModule.js?");

/***/ }),

/***/ "./src/modules/MatomoModule.js":
/*!*************************************!*\
  !*** ./src/modules/MatomoModule.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MatomoModule; });\n/* harmony import */ var _analyticsTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../analyticsTypes */ \"./src/analyticsTypes.js\");\n/* harmony import */ var _BasicModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BasicModule */ \"./src/modules/BasicModule.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\n\n\n\nclass MatomoModule extends _BasicModule__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n  constructor () {\n    super(_analyticsTypes__WEBPACK_IMPORTED_MODULE_0__[\"MODULE_MATOMO\"])\n  }\n\n  init (initConf = {}) {\n    if (!initConf.siteId) throw new Error('VueMultianalytics : Please provide siteId option to Matomo module')\n    if (!initConf.trackerBase) throw new Error('VueMultianalytics : Please provide trackerBase option to Matomo module')\n\n    // The matomo configuration array, cf https://developer.matomo.org/guides/tracking-javascript-guide\n    // items are of the form ['API_method_name', parameters...]\n    this.paq = window._paq = window._paq || initConf.paq || []\n    this.paq.push(['setTrackerUrl', initConf.trackerBase + 'piwik.php'])\n    this.paq.push(['setSiteId', initConf.siteId])\n    var d = document\n    var g = d.createElement('script')\n    var s = d.getElementsByTagName('script')[0]\n    g.type = 'text/javascript'; g.async = true; g.defer = true; g.src = initConf.trackerBase + 'piwik.js'; s.parentNode.insertBefore(g, s)\n  }\n\n  trackView ({viewName}) {\n    if (this.config.debug) Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(viewName)\n    this.paq.push(['setDocumentTitle', viewName]);\n    this.paq.push(['trackPageView']);\n  }\n\n  trackEvent ({category = \"Event\", action, label = null, value = null, callback = null }) {\n    if (this.config.debug) Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments)\n    this.paq.push(['trackEvent', category, action, label, value]);\n  }\n\n  setUsername (userId) {\n    this.paq.push(['setUserId', userId]);\n  }\n\n  // Same as setUsername\n  identify ({userId}) {\n    this.paq.push(['setUserId', userId]);\n  }\n}\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/modules/MatomoModule.js?");

/***/ }),

/***/ "./src/modules/MixpanelModule.js":
/*!***************************************!*\
  !*** ./src/modules/MixpanelModule.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MixpanelModule; });\n/* harmony import */ var _analyticsTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../analyticsTypes */ \"./src/analyticsTypes.js\");\n/* harmony import */ var _BasicModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BasicModule */ \"./src/modules/BasicModule.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\n\n\nclass MixpanelModule extends _BasicModule__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n  constructor () {\n    super(_analyticsTypes__WEBPACK_IMPORTED_MODULE_0__[\"MODULE_MIXPANEL\"])\n  }\n\n  init (initConf = {}) {\n\n      // Load the analytics snippet\n      (function(e,a){if(!a.__SV){var b=window;try{var c,l,i,j=b.location,g=j.hash;c=function(a,b){return(l=a.match(RegExp(b+\"=([^&]*)\")))?l[1]:null};g&&c(g,\"state\")&&(i=JSON.parse(decodeURIComponent(c(g,\"state\"))),\"mpeditor\"===i.action&&(b.sessionStorage.setItem(\"_mpcehash\",g),history.replaceState(i.desiredHash||\"\",e.title,j.pathname+j.search)))}catch(m){}var k,h;window.mixpanel=a;a._i=[];a.init=function(b,c,f){function e(b,a){var c=a.split(\".\");2==c.length&&(b=b[c[0]],a=c[1]);b[a]=function(){b.push([a].concat(Array.prototype.slice.call(arguments,\n0)))}}var d=a;\"undefined\"!==typeof f?d=a[f]=[]:f=\"mixpanel\";d.people=d.people||[];d.toString=function(b){var a=\"mixpanel\";\"mixpanel\"!==f&&(a+=\".\"+f);b||(a+=\" (stub)\");return a};d.people.toString=function(){return d.toString(1)+\".people (stub)\"};k=\"disable time_event track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config reset people.set people.set_once people.increment people.append people.union people.track_charge people.clear_charges people.delete_user\".split(\" \");\nfor(h=0;h<k.length;h++)e(d,k[h]);a._i.push([b,c,f])};a.__SV=1.2;b=e.createElement(\"script\");b.type=\"text/javascript\";b.setAttribute('defer','');b.src=\"undefined\"!==typeof MIXPANEL_CUSTOM_LIB_URL?MIXPANEL_CUSTOM_LIB_URL:\"file:\"===e.location.protocol&&\"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js\".match(/^\\/\\//)?\"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js\":\"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js\";c=e.getElementsByTagName(\"script\")[0];c.parentNode.insertBefore(b,c)}})(document,window.mixpanel||[]);\n\n\n\n\n      // Apply default configuration\n      // initConf = { ...pluginConfig, ...initConf }\n      const mandatoryParams = [ 'token'];\n      mandatoryParams.forEach(el => {\n        if (!initConf[ el ]) throw new Error(`VueMultianalytics : Please provide a \"${el}\" from the config.`)\n      })\n\n      this.config.debug = initConf.debug\n\n      // init\n      mixpanel.init(initConf.token, initConf.config);\n  }\n\n\n  // Methods\n\n  /**\n   * https://mixpanel.com/help/reference/javascript#sending-events\n   * Dispatch a view analytics event\n   *\n   * params object should contain\n   * @param viewName\n   */\n  trackView ({viewName}) {\n    if (!mixpanel.track) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(viewName)\n    }\n    mixpanel.track(\"Page Viewed\", { \"page\": viewName })\n  }\n\n  /**\n   * Dispatch a tracking analytics event\n   *\n   * params object should contain\n   * @param {string} action - Name of the event you are sending.\n   * @param {object} properties - An object of properties that are useful.\n   * @param {function} callback - if provided, the callback function will be called.\n   */\n   trackEvent ({action, properties = {}, callback = null}) {\n    if (!mixpanel.track) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments)\n    }\n\n    // Mixpanel alters the properties object with it's own properties. To avoid that, we\n    // need to clone the object\n    // https://github.com/mixpanel/mixpanel-js/blob/master/src/mixpanel-core.js#L1066\n    const mixpanelProperties = Object.assign({}, properties)\n    mixpanel.track(action, mixpanelProperties, callback)\n\n  }\n\n  setAlias (alias) {\n    if (!mixpanel.alias) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(alias)\n    }\n    mixpanel.alias(alias)\n  }\n\n  identify ({userId}) {\n    if (!mixpanel.identify) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(userId)\n    }\n    if (!userId) {\n      return\n    }\n    mixpanel.identify(userId)\n  }\n\n  setUsername (userId) {\n    if (!mixpanel.identity) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(userId)\n    }\n    mixpanel.identify(userId)\n  }\n\n  setUserProperties (properties = {}) {\n    if (!mixpanel.people) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(properties)\n    }\n    mixpanel.people.set(properties)\n  }\n\n  setUserPropertiesOnce (properties) {\n    if (!mixpanel.people) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(properties)\n    }\n     mixpanel.people.set_once(properties)\n  }\n\n  incrementUserProperties (properties) {\n    if (!mixpanel.people) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(properties)\n    }\n    mixpanel.people.increment(properties)\n  }\n\n  setSuperProperties (properties) {\n    if (!mixpanel.register) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(properties)\n    }\n     mixpanel.register(properties)\n  }\n\n  setSuperPropertiesOnce (properties) {\n    if (!mixpanel.register_once) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(properties)\n    }\n    mixpanel.register_once(properties)\n  }\n\n  reset () {\n    if (!mixpanel.reset) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])('reset')\n    }\n    mixpanel.reset();\n  }\n\n\n}\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/modules/MixpanelModule.js?");

/***/ }),

/***/ "./src/modules/MparticleModule.js":
/*!****************************************!*\
  !*** ./src/modules/MparticleModule.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MparticleModule; });\n/* harmony import */ var _analyticsTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../analyticsTypes */ \"./src/analyticsTypes.js\");\n/* harmony import */ var _BasicModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BasicModule */ \"./src/modules/BasicModule.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\n\n\n\nclass MparticleModule extends _BasicModule__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n                 constructor() {\n                   super(_analyticsTypes__WEBPACK_IMPORTED_MODULE_0__[\"MODULE_MPARTICLE\"]);\n                   this.superProperties = {};\n                   this.config\n                 }\n\n                 init(initConf = {}) {\n                   // Apply default configuration\n                   // initConf = { ...pluginConfig, ...initConf }\n                   this.config = initConf\n                   const mandatoryParams = [\"token\"];\n                   mandatoryParams.forEach(el => {\n                     if (!initConf[el]) throw new Error(`VueMultianalytics : Please provide a \"${el}\" from the config.`);\n                   });\n                   window.mParticle = { config: { isDevelopmentMode: initConf.debug } };\n\n                   // name of gloval variable changed from analytics to segment\n                   (function(apiKey) {\n                     window.mParticle = window.mParticle || {};\n                     window.mParticle.eCommerce = { Cart: {} };\n                     window.mParticle.Identity = {};\n                     window.mParticle.config = window.mParticle.config || {};\n                     window.mParticle.config.rq = [];\n                     window.mParticle.ready = function(f) {\n                       window.mParticle.config.rq.push(f);\n                     };\n\n                     function a(o, t) {\n                       return function() {\n                         t && (o = t + \".\" + o);\n                         var e = Array.prototype.slice.call(arguments);\n                         e.unshift(o), window.mParticle.config.rq.push(e);\n                       };\n                     }\n                     var x = [\"endSession\", \"logError\", \"logEvent\", \"logForm\", \"logLink\", \"logPageView\", \"setSessionAttribute\", \"setAppName\", \"setAppVersion\", \"setOptOut\", \"setPosition\", \"startNewSession\", \"startTrackingLocation\", \"stopTrackingLocation\"],\n                       y = [\"setCurrencyCode\", \"logCheckout\"],\n                       z = [\"login\", \"logout\", \"modify\"];\n                     x.forEach(function(o) {\n                       window.mParticle[o] = a(o);\n                     }), y.forEach(function(o) {\n                         window.mParticle.eCommerce[o] = a(o, \"eCommerce\");\n                       }), z.forEach(function(o) {\n                         window.mParticle.Identity[o] = a(o, \"Identity\");\n                       });\n\n                     var mp = document.createElement(\"script\");\n                     mp.type = \"text/javascript\";\n                     mp.async = true;\n                     mp.src = (\"https:\" == document.location.protocol ? \"https://jssdkcdns\" : \"http://jssdkcdn\") + \".mparticle.com/js/v2/\" + apiKey + \"/mparticle.js\";\n                     var s = document.getElementsByTagName(\"script\")[0];\n                     s.parentNode.insertBefore(mp, s);\n                   })(initConf.token);\n                 }\n\n                 /**\n                  * https://segment.com/docs/sources/website/analytics.js/#page\n                  * Dispatch a page event\n                  *\n                  * params object should contain\n                  * @param {string} viewName\n                  */\n                 trackView({ viewName, properties = {}, customFlags = {} }) {\n                   if (!mParticle.logPageView) return;\n                   try {\n                     let fullProperties = Object.assign(properties, this.superProperties);\n                     mParticle.logPageView(viewName, fullProperties, customFlags);\n                   } catch (e) {\n                     if (!(e instanceof ReferenceError)) {\n                       throw e;\n                     }\n                   }\n                 }\n                 /**\n                  * Dispatch a tracking analytics event\n                  * https://segment.com/docs/sources/website/analytics.js/#track\n                  *\n                  * params object should contain\n                  * @param {string} category - Typically the object that was interacted with (e.g. 'Video')\n                  * @param {string} action - The type of interaction (e.g. 'play')\n                  * @param {integer} eventType - Type of event for mParticle\n                  * @param {string} label - Useful for categorizing events (e.g. 'Fall Campaign')\n                  * @param {integer} value - A numeric value associated with the event (e.g. 42)\n                  */\n                 trackEvent({ category = \"Event\", action, eventType = mParticle.EventType.Other, label = null, value = null, properties = {}, callback = null }) {\n                   if (!mParticle.logEvent) return;\n                   try {\n                     if (this.config.debug) {\n                       Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments);\n                     }\n                     let fullProperties = Object.assign(properties, this.superProperties);\n                     mParticle.logEvent(action, eventType, fullProperties);\n                   } catch (e) {\n                     if (!(e instanceof ReferenceError)) {\n                       throw e;\n                     }\n                   }\n                 }\n\n                 /**\n                  * Dispatch a tracking analytics event\n                  * https://segment.com/docs/sources/website/analytics.js/#track\n                  *\n                  * params object should contain\n                  * @param {integer} productActionType - Type of action to ecommerce platform (e.g. 1)\n                  * @param {object} product - Product to be tracked\n                  * @param {object} attributes - object of attributes related to the event\n                  */\n                 ecommerceTrackEvent({ productActionType = mParticle.CommerceEventType.ProductAddToCart, product = [], properties = {}, currency = undefined }) {\n                   if (!mParticle.eCommerce) return;\n                   try {\n                     if (this.config.debug) {\n                       Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments);\n                     }\n                     let mProduct = {};\n                     if (!Array.isArray(product)) {\n                       mProduct = mParticle.eCommerce.createProduct(product.name, product.sku || performance.now(), product.price, product.quantity);\n                     }\n\n                     let fullProperties = Object.assign(properties, this.superProperties);\n                     if (currency) {\n                       mParticle.eCommerce.setCurrencyCode(currency);\n                     }\n                     mParticle.eCommerce.logProductAction(productActionType, mProduct, fullProperties);\n                   } catch (e) {\n                     if (!(e instanceof ReferenceError)) {\n                       throw e;\n                     }\n                   }\n                 }\n\n                 /**\n                  * associate your users and their actions to a recognizable userId\n                  * https://segment.com/docs/sources/website/analytics.js/#identify\n                  *\n                  * @param {any} properties - traits of your user. If you specify a properties.userId, then a userId will be set\n                  */\n\n                 identify (userParams) {\n                   return new Promise ((resolve, reject) => {\n                    let identityRequest = { userIdentities: userParams }\n                    mParticle.Identity.login(identityRequest, (result) => {\n                      if (result.httpCode === 200) resolve(result)\n                      else reject(result)\n                    })\n                   })\n                 }\n\n                 reset () {\n                   return new Promise ((resolve, reject) => {\n                     mParticle.Identity.logout({}, function (result) {\n                       if (result.httpCode === 200) {\n                         console.log(result)\n                         resolve(result)\n                        }\n                       else reject(result)\n                     })\n                   })\n                 }\n\n                 setUserProperties (userParams) {\n                   return new Promise ((resolve, reject) => {\n                    let identityRequest = { userIdentities: userParams }\n                    mParticle.Identity.modify(identityRequest, function (result) {\n                      if (result.httpCode === 200) resolve(result)\n                      else reject(result)\n                    })\n                   })\n                 }\n\n                 /**\n                  * Define a property that will be sent across all the events\n                  *\n                  * @param {any} properties\n                  */\n                 setSuperProperties(properties = {}) {\n                   if (properties.isAuthorized !== undefined) {\n                     properties.isAuthorized = properties.isAuthorized ? \"true\" : \"false\";\n                   }\n                   this.superProperties = properties;\n                 }\n               }\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/modules/MparticleModule.js?");

/***/ }),

/***/ "./src/modules/SegmentModule.js":
/*!**************************************!*\
  !*** ./src/modules/SegmentModule.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SegmentModule; });\n/* harmony import */ var _analyticsTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../analyticsTypes */ \"./src/analyticsTypes.js\");\n/* harmony import */ var _BasicModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BasicModule */ \"./src/modules/BasicModule.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\n\n\n\nclass SegmentModule extends _BasicModule__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n  constructor () {\n    super(_analyticsTypes__WEBPACK_IMPORTED_MODULE_0__[\"MODULE_SEGMENT\"])\n    this.superProperties = {}\n  }\n\n  init (initConf = {}) {\n    // name of gloval variable changed from analytics to segment\n    (function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"once\",\"off\",\"on\"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement(\"script\");e.type=\"text/javascript\";e.setAttribute('defer','');e.src=(\"https:\"===document.location.protocol?\"https://\":\"http://\")+\"cdn.segment.com/analytics.js/v1/\"+t+\"/analytics.min.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION=\"4.0.0\";\n    }})();\n\n    // Apply default configuration\n    // initConf = { ...pluginConfig, ...initConf }\n    const mandatoryParams = [ 'token'];\n    mandatoryParams.forEach(el => {\n      if (!initConf[ el ]) throw new Error(`VueMultianalytics : Please provide a \"${el}\" from the config.`)\n    })\n\n    this.config.debug = initConf.debug\n\n    // init\n    analytics.load(initConf.token)\n    analytics.debug(Boolean(this.config.debug))\n  }\n\n  /**\n   * https://segment.com/docs/sources/website/analytics.js/#page\n   * Dispatch a page event\n   *\n   * params object should contain\n   * @param {string} viewName\n   */\n  trackView({viewName, properties = {}}) {\n    if (!analytics.page) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments)\n    }\n    try {\n      let fullProperties = Object.assign(properties, this.superProperties)\n      analytics.page(viewName, properties)\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n  /**\n   * Dispatch a tracking analytics event\n   * https://segment.com/docs/sources/website/analytics.js/#track\n   *\n   * params object should contain\n   * @param {string} category - Typically the object that was interacted with (e.g. 'Video')\n   * @param {string} action - The type of interaction (e.g. 'play')\n   * @param {string} label - Useful for categorizing events (e.g. 'Fall Campaign')\n   * @param {integer} value - A numeric value associated with the event (e.g. 42)\n   */\n  trackEvent ({category = \"Event\", action, label = null, value = null, properties = {}, callback = null }) {\n    if (!analytics.track) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(...arguments)\n    }\n    try {\n      let fullProperties = Object.assign(properties, this.superProperties)\n      analytics.track(action, fullProperties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Same as identify\n   * associate your users and their actions to a recognizable userId\n   * https://segment.com/docs/sources/website/analytics.js/#identify\n   *\n   * @param {any} properties - traits of your user. If you specify a properties.userId, then a userId will be set\n   */\n  setUserProperties(properties = {}) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(properties)\n    }\n    let params = {}\n\n    if (properties.hasOwnProperty('userId')) {\n      let id = properties.userId\n      delete properties.userId\n      params.userId = id\n    }\n\n    params.options = properties\n    this.identify(params)\n  }\n\n  /**\n   * Define a property that will be sent across all the events\n   *\n   * @param {any} properties\n   */\n  setSuperProperties (properties) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(properties)\n    }\n    this.superProperties = properties\n  }\n\n\n  /**\n   * associate your users and their actions to a recognizable userId\n   * https://segment.com/docs/sources/website/analytics.js/#identify\n   *\n   * @param {any} params - traits of your user. If you specify a params.userId, then a userId will be set\n   */\n  identify (params = {}) {\n    if (!analytics.identify) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(params)\n    }\n    try {\n      if (params.userId) {\n        analytics.identify(params.userId, params.options);\n      } else {\n        analytics.identify(params.options);\n      }\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Same as identify\n   * associate your users and their actions to a recognizable userId\n   * https://segment.com/docs/sources/website/analytics.js/#identify\n   *\n   * @param {any} name - userId\n   */\n  setUsername (userId) {\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(userId)\n    }\n    this.identify({userId})\n  }\n\n  /**\n  *  Alias is necessary for properly implementing KISSmetrics and Mixpanel.\n  *  https://segment.com/docs/sources/website/analytics.js/#alias\n  *  Note: Aliasing is generally handled automatically when you identify a user\n  *\n  *  @param {string} alias\n  */\n\n  setAlias(alias) {\n    if (!analytics.alias) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])(alias)\n    }\n    try {\n      analytics.alias(alias);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  reset () {\n    if (!analytics.reset) return\n    if (this.config.debug) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"logDebug\"])('reset')\n    }\n    try {\n      analytics.reset();\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/modules/SegmentModule.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: logDebug, cordovaApp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logDebug\", function() { return logDebug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cordovaApp\", function() { return cordovaApp; });\n\n/**\n * Console log depending on config debug mode\n * @param {...*} message\n */\nconst logDebug = function (params) {\n  console.log('VueAnalytics :', ...arguments)\n}\n\n/**\n * Handle tools for cordova app workarounds\n */\nconst cordovaApp = {\n  bootstrapWindows () {\n    // Disable activeX object to make Analytics.js use XHR, or something else\n    window.ActiveXObject = undefined;\n    ga('set', 'checkProtocolTask', null)\n  },\n}\n\n\n//# sourceURL=webpack://VueMultianalytics/./src/utils.js?");

/***/ })

/******/ });
});